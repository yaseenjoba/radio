{"version":3,"sources":["./src/environments/environment.ts","./src/app/stations/stations.component.ts","./src/app/stations/stations.component.html","./src/app/data.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/play/play.component.ts","./src/app/play/play.component.html","./src/app/cities/cities.component.ts","./src/app/cities/cities.component.html","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;IACjB,GAAG,EAAC,gEAAgE;CACrE,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyD;;;;;;;ICG7C,qEAAmD;IAAA,uEAAgE;IAA5B,+VAA2B;IAAC,uDAAgB;IAAA,4DAAI;IAAA,4DAAK;;;IAAzB,0DAAgB;IAAhB,gFAAgB;;;IAH3I,sEACI;IAAA,wEAAO;IAAA,uDAAqB;IAAA,4DAAQ;IACpC,wEACI;IAAA,iHAA4I;IAChJ,4DAAK;IACT,4DAAM;;;IAJK,0DAAqB;IAArB,yFAAqB;IAEA,0DAAwB;IAAxB,iGAAwB;;ADIrD,MAAM,iBAAiB;IAG5B,YAAoB,IAAiB;QAAjB,SAAI,GAAJ,IAAI,CAAa;IAAI,CAAC;IAC1C,QAAQ;IACR,CAAC;IACD,MAAM,CAAC,KAAU;QACf,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;IAC/B,CAAC;;kFARU,iBAAiB;iGAAjB,iBAAiB;QCR9B,yEACI;QAAA,6GAKM;QACV,4DAAM;QACN,yEAAyD;;QAP/C,0DAA6B;QAA7B,+FAA6B;QAO7B,0DAAmC;QAAnC,gGAAmC;;6FDAhC,iBAAiB;cAL7B,uDAAS;eAAC;gBACT,QAAQ,EAAE,cAAc;gBACxB,WAAW,EAAE,2BAA2B;gBACxC,SAAS,EAAE,CAAC,2BAA2B,CAAC;aACzC;yGAEU,YAAY;kBAApB,mDAAK;;;;;;;;;;;;;;AETR;AAAA;AAAA;AAAA;AAAA;AAA2C;AAEgB;;;AAKpD,MAAM,WAAW;IAEtB,YAAoB,IAAe;QAAf,SAAI,GAAJ,IAAI,CAAW;IAAI,CAAC;IACxC,oBAAoB;QAClB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,wEAAW,CAAC,GAAG,CAAC,CAAC;IACxC,CAAC;;sEALU,WAAW;8FAAX,WAAW,WAAX,WAAW,mBAFV,MAAM;6FAEP,WAAW;cAHvB,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACND;AAAA;AAAA;AAAA;AAA0C;;;AAOnC,MAAM,YAAY;IALzB;QAME,UAAK,GAAG,WAAW,CAAC;KACrB;;wEAFY,YAAY;4FAAZ,YAAY;QCPzB,wEAAyB;;6FDOZ,YAAY;cALxB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,sBAAsB;gBACnC,SAAS,EAAE,CAAC,sBAAsB,CAAC;aACpC;;;;;;;;;;;;;;AELD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AAClB;AAC4B;AACZ;AACT;AACa;AACM;AACZ;;AAgB/C,MAAM,SAAS;;wFAAT,SAAS,cAFR,2DAAY,EAAC,+DAAU;4IAExB,SAAS,mBAHT,EAAE,YAJJ;YACP,uEAAa;YACb,oEAAgB,EAAC,qEAAgB;SAClC;mIAIU,SAAS,mBAZlB,2DAAY;QACZ,wEAAe;QACf,8EAAiB;QACjB,kEAAa,aAGb,uEAAa;QACb,oEAAgB,EAAC,qEAAgB;6FAKxB,SAAS;cAdrB,sDAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,2DAAY;oBACZ,wEAAe;oBACf,8EAAiB;oBACjB,kEAAa;iBACd;gBACD,OAAO,EAAE;oBACP,uEAAa;oBACb,oEAAgB,EAAC,qEAAgB;iBAClC;gBACD,SAAS,EAAE,EAAE;gBACb,SAAS,EAAE,CAAC,2DAAY,EAAC,+DAAU,CAAC;aACrC;;;;;;;;;;;;;;ACvBD;AAAA;AAAA;AAAA;AAAyD;;;;ICAzD,yEACI;IAAA,sEACI;IAAA,qEAAI;IAAA,uDAAwB;IAAA,4DAAK;IACjC,sEAA2G;IAC/G,4DAAM;IACV,4DAAM;;;IAHM,0DAAwB;IAAxB,4FAAwB;IAC2C,0DAA2B;IAA3B,wJAA2B;;ADInG,MAAM,aAAa;IAExB,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;0EALU,aAAa;6FAAb,aAAa;QCP1B,yGAKM;;QALa,kGAAgC;;6FDOtC,aAAa;cALzB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,uBAAuB;gBACpC,SAAS,EAAE,CAAC,uBAAuB,CAAC;aACrC;sCAIU,eAAe;kBAAvB,mDAAK;;;;;;;;;;;;;;AERR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;;ICGtC,qEAA6B;IAAA,uEAAiC;IAArB,0UAAoB;IAAC,uDAAU;IAAA,4DAAI;IAAA,4DAAK;;;IAAnB,0DAAU;IAAV,0EAAU;;ADI7E,MAAM,eAAe;IAG1B,YAAoB,IAAiB;QAAjB,SAAI,GAAJ,IAAI,CAAa;IAAI,CAAC;IAC1C,QAAQ;QACN,IAAI,CAAC,IAAI,CAAC,oBAAoB,EAAE,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE;YAC7C,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;YAChB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAC3B,CAAC,CAAC,CAAC;IAEL,CAAC;IACD,MAAM,CAAC,KAAU;QACf,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACtB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IAC7B,CAAC;;8EAdU,eAAe;+FAAf,eAAe;QCT5B,wEAAkB;QAAA,mFAAwB;QAAA,4DAAK;QAC/C,yEACI;QAAA,sEACI;QAAA,wEAAO;QAAA,iEAAM;QAAA,4DAAQ;QACrB,wEACI;QAAA,yGAAiF;QACrF,4DAAK;QACT,4DAAM;QAEV,4DAAM;QACN,6EAAuD;;QALzB,0DAAS;QAAT,+EAAS;QAKzB,0DAAyB;QAAzB,sFAAyB;;6FDD1B,eAAe;cAL3B,uDAAS;eAAC;gBACT,QAAQ,EAAE,YAAY;gBACtB,WAAW,EAAE,yBAAyB;gBACtC,SAAS,EAAE,CAAC,yBAAyB,CAAC;aACvC;;;;;;;;;;;;;;AERD;AAAA;AAAA;AAAA;AAAyC;AACc;;;AAEvD,MAAM,MAAM,GAAW,EAAE,CAAC;AAMnB,MAAM,gBAAgB;;+FAAhB,gBAAgB;0JAAhB,gBAAgB,kBAHlB,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAC7B,4DAAY;mIAEX,gBAAgB,uFAFjB,4DAAY;6FAEX,gBAAgB;cAJ5B,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;gBACvC,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;ACRD;AAAA;AAAA;AAAA;AAAA;AAA+C;AAIU;;;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,gBAAgB,CAAC,0DAAU;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;;;;;;;;;;;;ACXpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,qC","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  url:\"http://www.json-generator.com/api/json/get/bUEOeajvoy?indent=2\"\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { DataService } from './../data.service';\r\nimport { Component, Input, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-stations',\r\n  templateUrl: './stations.component.html',\r\n  styleUrls: ['./stations.component.scss']\r\n})\r\nexport class StationsComponent implements OnInit {\r\n  @Input() selectedCity: any;\r\n  selectedStation: any;\r\n  constructor(private data: DataService) { }\r\n  ngOnInit(): void {\r\n  }\r\n  select(value: any) {\r\n    this.selectedStation = value;\r\n  }\r\n\r\n}\r\n","<div class=\"main\">\r\n    <div *ngIf=\"selectedCity!=undefined\">\r\n        <label>{{selectedCity.city}}</label>\r\n        <ul class=\"nav nav-pills \">\r\n            <li *ngFor=\"let station of selectedCity.stations \"><a style=\"color: black; \" href=\"# \" (click)=\"select(station); \">{{station.name}}</a></li>\r\n        </ul>\r\n    </div>\r\n</div>\r\n<app-play [selectedStation]=\"selectedStation\"></app-play>","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DataService {\r\n\r\n  constructor(private http:HttpClient) { }\r\n  getCitiesAndStations(){\r\n    return this.http.get(environment.url);\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  title = 'Radio-App';\r\n}\r\n","<app-cities></app-cities>","import { DataService } from './data.service';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule} from '@angular/core';\r\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { CitiesComponent } from './cities/cities.component';\r\nimport { StationsComponent } from './stations/stations.component';\r\nimport { PlayComponent } from './play/play.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    CitiesComponent,\r\n    StationsComponent,\r\n    PlayComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,HttpClientModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent,HttpClient]\r\n})\r\nexport class AppModule { }\r\n","import { Component, Input, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-play',\r\n  templateUrl: './play.component.html',\r\n  styleUrls: ['./play.component.scss']\r\n})\r\nexport class PlayComponent implements OnInit {\r\n\r\n  constructor() { }\r\n  @Input() selectedStation:any;\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"main\" *ngIf=\"selectedStation!=undefined\">\r\n    <div>\r\n        <h1>{{selectedStation.name}}</h1>\r\n        <audio width=\"300\" height=\"32\" controls=\"controls\" autoplay=\"autoplay\" [src]=\"selectedStation.url\"></audio>\r\n    </div>\r\n</div>\r\n<!-- <div *ngSwitchCase=\" 'Al houria FM' \">\r\n        <h1>Al houria FM</h1>\r\n        <audio controls autoplay\r\n            src=\"http://rs.hadara.ps:8000/;stream.mp33&13202692901&duration=99999&id=scplayer&autostart=true \"\r\n            type=\"audio/mpeg \"> </audio>\r\n    </div>\r\n    <div *ngSwitchCase=\" 'Al rabia' \">\r\n        <h1>Al rabia</h1>\r\n        <audio controls autoplay\r\n            src=\"http://radio.r4fm.ps:8044/;stream.mp3&13202692901&duration=99999&id=scplayer&autostart=true \"\r\n            type=\"audio/mpeg \"> </audio>\r\n    </div>\r\n    <div *ngSwitchCase=\" 'marah FM' \">\r\n        <h1>marah FM</h1>\r\n\r\n        <audio controls autoplay src=\"http://rs.hadara.ps:8056/;stream.mp3 \" type=\"audio/mpeg \"></audio>\r\n    </div>\r\n    <div *ngSwitchCase=\" 'Ajyal FM' \">\r\n        <h1>Ajyal FM</h1>\r\n\r\n        <audio controls autoplay source src=\"http://icecast.mada.ps:8095/ajyalnew \" type=\"audio/mpeg \"></audio>\r\n    </div>\r\n    <div *ngSwitchCase=\" 'Alfajer' \">\r\n        <h1>Alfajer</h1>\r\n\r\n        <audio controls autoplay\r\n            src=\"http://rs.hadara.ps:8004/;stream.mp3&13202692901&duration=99999&id=scplayer&autostart=true \"\r\n            type=\"audio/mpeg \"> </audio>\r\n    </div>\r\n    <div *ngSwitchCase=\" 'Kl elnas' \">\r\n        <h1>Kl elnas</h1>\r\n\r\n        <audio controls autoplay\r\n            src=\"http://mmbradio1.serverroom.us:5206/;stream.mp3&amp;13202692901&amp;duration=99999&amp;id=scplayer&amp;autostart=true \"\r\n            type=\"audio/mpeg \"> </audio>\r\n    </div>\r\n    <div *ngSwitchCase=\" 'Power' \">\r\n        <h1>Kl elnas</h1>\r\n\r\n        <audio src=\"http://rs.hadara.ps:8044/listen.pls/;listen.pls?sid=1 \" autoplay=\"true \" controls=\"true \"\r\n            volume=\"1.0 \"></audio>\r\n\r\n    </div>\r\n    <div *ngSwitchCase=\" 'Al balad' \">\r\n        <h1>Kl elnas</h1>\r\n\r\n        <audio src=\"http://live.masterweb-ps.com:8006/;mp3 \" preload=\"auto \" controls=\" \" autoplay=\" \" loop=\" \"></audio>\r\n    </div>\r\n    <div *ngSwitchCase=\" 'Quran' \">\r\n        <h1>Kl elnas</h1>\r\n\r\n        <audio controls autoplay\r\n            src=\"http://www.quran-radio.org:8002/;stream.mp3&13202692901&duration=99999&id=scplayer&autostart=true \"\r\n            type=\"audio/mpeg \"> </audio>\r\n    </div>\r\n    <div *ngSwitchCase=\" 'aroba FM' \">\r\n        <audio controls=\" \" autoplay=\" \" name=\"media \">\r\n            <source src=\"http://icecast.mada.ps:8096/anghamnew \" type=\"audio/mpeg \">\r\n        </audio>\r\n    </div>\r\n    <div *ngSwitchCase=\" 'raya FM' \">\r\n        <h1>Not Supported</h1>\r\n    </div>\r\n    <div *ngSwitchCase=\" 'Amoaj FM' \">\r\n        <h1>Not Supported</h1>\r\n    </div>\r\n    <div *ngSwitchCase=\" 'Baldna' \">\r\n        <h1>Not Supported</h1>\r\n    </div>\r\n</div> -->","import { Observable } from 'rxjs';\r\nimport { DataService } from './../data.service';\r\nimport { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-cities',\r\n  templateUrl: './cities.component.html',\r\n  styleUrls: ['./cities.component.scss']\r\n})\r\nexport class CitiesComponent implements OnInit {\r\n  cities: any;\r\n  selected: any;\r\n  constructor(private data: DataService) { }\r\n  ngOnInit(): void {\r\n    this.data.getCitiesAndStations().subscribe(d => {\r\n      this.cities = d;\r\n      console.log(this.cities);\r\n    });\r\n\r\n  }\r\n  select(value: any) {\r\n    this.selected = value;\r\n    console.log(this.selected);\r\n  }\r\n\r\n}\r\n","<h1 class=\"title\">Palestine Radio Stations</h1>\r\n<div class=\"main\">\r\n    <div>\r\n        <label>Cities</label>\r\n        <ul class=\"nav nav-pills\">\r\n            <li *ngFor=\"let c of cities\"><a href=\"#\" (click)=\"select(c);\">{{c.city}}</a></li>\r\n        </ul>\r\n    </div>\r\n\r\n</div>\r\n<app-stations [selectedCity]=\"selected\"></app-stations>","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nconst routes: Routes = [];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}